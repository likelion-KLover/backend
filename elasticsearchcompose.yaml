services:
  elasticsearch:
  #meilisearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.1
    #image: getmeili/meilisearch
    #container_name: meilisearch
    container_name: elasticsearch
    entrypoint: >
      /bin/sh -c "
      if ! bin/elasticsearch-plugin list | grep -q 'analysis-nori'; then
      echo 'start to install analysis-nori...';
      bin/elasticsearch-plugin install --batch analysis-nori;
      else
      echo 'analysis-nori already exists';
      fi;
      
      if ! bin/elasticsearch-plugin list | grep -q 'analysis-ik'; then
      echo 'start to install analysis-ik...';
      bin/elasticsearch-plugin install --batch https://get.infini.cloud/elasticsearch/analysis-ik/8.17.1;
      else
      echo 'analysis-ik already exists';
      fi;
      
      bin/elasticsearch
      "
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
#      - "7700:7700"
      - "9200:9200"
    networks:
      - elastic
  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.1
    container_name: kibana
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - elastic
  logstash:
    image: docker.elastic.co/logstash/logstash:8.17.1
    container_name: logstash
    environment:
      - LS_JAVA_OPTS=-Xms512m -Xmx512m
#      - XPACK_MONITORING_ENABLED=false
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./logstash/lib/postgresql-42.3.1.jar:/usr/share/logstash/logstash-core/lib/jars/postgresql-42.3.1.jar:ro
      - ./logstash/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
      - ./logstash/template:/usr/share/logstash/template:ro
    ports:
      - "5001:5001"
      - "5044:5044"
    depends_on:
#      - meilisearch
      - elasticsearch
    networks:
      - elastic
networks:
  elastic:
    driver: bridge